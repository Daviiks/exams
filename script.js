let questions = [];
let currentQuestionIndex = 0;
let score = 0;
let selectedAnswerIndex = null;
const progressCounter = document.getElementById('progress-counter');

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ JSON
async function loadQuestions() {
    try {
        const response = await fetch('questions.json');
        if (!response.ok) {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã');
        }
        questions = await response.json();
        displayQuestion();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        document.getElementById('question').textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.';
    }
}

function displayQuestion() {
    if (currentQuestionIndex >= questions.length) {
        showResult();
        return;
    }
    updateProgressBar();
    progressCounter.textContent = `–í–æ–ø—Ä–æ—Å ${currentQuestionIndex + 1} –∏–∑ ${questions.length}`;
    selectedAnswerIndex = null; 
    

    const questionElement = document.getElementById('question');
    const optionsElement = document.getElementById('options');
    const nextButton = document.getElementById('next-button');
    const currentQuestion = questions[currentQuestionIndex];

    questionElement.textContent = `${currentQuestionIndex + 1}. ${currentQuestion.question}`;
    optionsElement.innerHTML = '';

    currentQuestion.options.forEach((option, index) => {
        const button = document.createElement('button');
        button.textContent = option;
        button.onclick = () => selectAnswer(index);
        optionsElement.appendChild(button);
    });
    optionsElement.disabled = false;
    nextButton.disabled = true;
}

function selectAnswer(answerIndex) {
    const currentQuestion = questions[currentQuestionIndex];
    const options = document.querySelectorAll('#options button');
    
    options[currentQuestion.correctAnswer].style.backgroundColor = 'lightgreen';
    
    if (answerIndex === currentQuestion.correctAnswer) {
        score++;
    } else {
        options[answerIndex].style.backgroundColor = 'salmon';
    }

    selectedAnswerIndex = answerIndex; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä
    document.getElementById('next-button').disabled = false;
    options.forEach(btn => {
        btn.disabled = true; // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
        btn.style.opacity = '1';
        btn.style.color = '#333';
        btn.style.cursor = 'not-allowed';
    });
}

document.getElementById('next-button').addEventListener('click', () => {
    currentQuestionIndex++;
    displayQuestion();
});

function updateProgress() {
    const progress = (currentQuestionIndex / questions.length) * 100;
    document.getElementById('progress').style.width = `${progress}%`;
}

function showResult() {
    const resultElement = document.getElementById('result');
    resultElement.innerHTML = `
        <h2>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!</h2>
        <p>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${score} –∏–∑ ${questions.length}</p>
        <button onclick="location.reload()">–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞</button>
    `;
    document.getElementById('question-container').style.display = 'none';
    document.getElementById('next-button').style.display = 'none';
}

const themeToggle = document.getElementById('theme-toggle');

function initTheme() {
    const savedTheme = localStorage.getItem('theme') || 
        (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    document.documentElement.setAttribute('data-theme', savedTheme);
    updateToggleIcon(savedTheme);
}

function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    updateToggleIcon(newTheme);
}

function updateToggleIcon(theme) {
    themeToggle.textContent = theme === 'dark' ? 'üåû' : 'üåô';
}

function updateProgressBar() {
    const progressPercent = (currentQuestionIndex / questions.length) * 100;
    document.querySelector('.progress').style.width = `${progressPercent}%`;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener('DOMContentLoaded', () => {
    initTheme();
    themeToggle.addEventListener('click', toggleTheme);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.onload = loadQuestions;